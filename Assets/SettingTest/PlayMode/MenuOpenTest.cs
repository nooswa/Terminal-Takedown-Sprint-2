using System.Collections;
using NUnit.Framework;
using UnityEngine;
using UnityEngine.TestTools;
using UnityEngine.UI;

public class MenuOpenTest
{
    [UnityTest]
    public IEnumerator SettingsMenuOpenTest()
    {
        //arrange
        var gameObject = new GameObject();
        var pauseMenu = gameObject.AddComponent<PauseMenu>();
        pauseMenu.enabled = false; //disables start method

        var settingsVIS = new GameObject();
        pauseMenu.Settings = settingsVIS;
        settingsVIS.SetActive(false); //set to false for test

        //act
        pauseMenu.OptionsOn(); //calls optionson method in pausemenu (to turn it on)

        yield return null; //stall

        //assert
        Assert.IsTrue(settingsVIS.activeSelf, "Settngs did not appear"); //checks for active
    }

    [UnityTest]
    public IEnumerator SettingsMenuCloseTest()
    {
        //arrange
        var gameObject = new GameObject();
        var pauseMenu = gameObject.AddComponent<PauseMenu>();
        pauseMenu.enabled = false; //disables start method

        var settingsVIS = new GameObject();
        pauseMenu.Settings = settingsVIS;
        settingsVIS.SetActive(true); //set to true for test

        //act
        pauseMenu.OptionsOff(); //calls optionsoff method in pausemenu (to turn it off)

        yield return null; //stall

        //assert
        Assert.IsFalse(settingsVIS.activeSelf, "Settngs did not close"); //checks for disable
    }

    [UnityTest]
    public IEnumerator ApplyTimerTest()
    {
        //arrange
        var gameObject = new GameObject();
        var pauseMenu = gameObject.AddComponent<PauseMenu>();
        pauseMenu.enabled = false; //disables start method

        pauseMenu.TimerSliderValue = new GameObject().AddComponent<Text>();
        pauseMenu.TimerSliderValue.text = "";

        float testValue = 30f;

        //act
        pauseMenu.UpdateValue(testValue);

        yield return null;

        //assert
        Assert.AreEqual("30s", pauseMenu.TimerSliderValue.text);
    }
}
